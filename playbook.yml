# Copyright Holder: TANIGUCHI Masaya
# Copyright Year: 2020
# License: MIT

- hosts: all
  vars:
    kallithea_root: /srv/kallithea
    kallithea_user: admin
    kallithea_password: 3WzeJftriWK4B2Zk
    kallithea_email: admin@example.com
    kallithea_repos: /srv/repos
    kallithea_server_name: example.com
  become: yes
  tasks:
    - name: Add nodesource
      command: curl -fsSL https://rpm.nodesource.com/setup_12.x | bash -
    - name: Install dependencies via yum
      yum: name={{ item }} state=installed
      with_items:
        - httpd
        - gcc
        - git
        - libffi-devel
        - python3-devel
        - python3-venv
        - nodejs
    #
    # Kallithea
    #
    - name: Install kallithea
      pip: 
        name: kallithea
        state: latest
        virtualenv: "{{ kallithea_root }}/.venv"
        virtualenv_python: python3
    - name: Test kallithea.ini
      stat:
        path: "{{ kallithea_root }}/kallithea.ini"
      register: "kallithea_ini"
    - name: Create configuration
      command: >
        {{ kallithea_root }}/.venv/bin/kallithea-cli config-create {{ kallithea_root }}/kallithea.ini
      args:
        chdir: "{{ kallithea_root }}"
      when: not kallithea_ini.stat.exists
    - name: Test kallithea.db
      stat:
        path: "{{ kallithea_root }}/kallithea.db"
      register: "kallithea_db"
    - name: Create database
      command: >
        {{ kallithea_root }}/.venv/bin/kallithea-cli db-create -c {{ kallithea_root}}/kallithea.ini
          --user={{ kallithea_user }}
          --password={{ kallithea_password }}
          --email={{ kallithea_email }}
          --repos={{ kallithea_repos }}
      args:
        chdir: "{{ kallithea_root }}"
      when: not kallithea_db.stat.exists
    - name: Build front-end
      command: >
        {{ kallithea_root }}/.venv/bin/kallithea-cli front-end-build
      args:
        chdir: "{{ kallithea_root }}"
    - name: Create systemd configuration
      template:
        src: ./kallithea.service.j2
        dest: /etc/systemd/system/kallithea.service
        mode: 664
    - name: Enable kallithea
      systemd:
        name: kallithea
        enabled: yes
        state: started
    #
    # Apache Http Server
    #
    - name: Activate http
      firewalld:
        service: "{{ item }}"
        permanent: yes
        state: enabled
      with_items:
        - http
        #- https
    - name: Create apache configuration
      template:
        src: ./kallithea.conf.j2
        dest: /etc/httpd/conf.d/kallithea.conf
        mode: 664
    - name: Enable apache
      systemd:
        name: httpd
        enabled: yes
        state: restarted
